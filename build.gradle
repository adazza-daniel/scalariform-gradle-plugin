plugins {
  id "groovy"
  id "com.github.hierynomus.license" version "0.12.1"
}

defaultTasks 'build'

group = 'com.hierynomus.gradle.plugins'

repositories {
  jcenter()
}

apply from: 'https://raw.githubusercontent.com/adazza/adazza-gradle/master/adazza-bootstrap.gradle'
apply from: 'https://raw.githubusercontent.com/adazza/adazza-gradle/master/adazza-core.gradle'

dependencies {
  compile gradleApi()
  compile localGroovy()
  compile "org.scala-lang:scala-library:${scalaInfo[scalaVersion].exactVersion}"
  compile "org.scalariform:scalariform_$scalaVersion:0.2.2"
  testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
    exclude group: 'org.codehaus.groovy', module: 'groovy-all'
  }
  testCompile 'com.netflix.nebula:nebula-test:3.1.0'
}

license {
  header = project.file("HEADER")
  mapping {
    java = 'SLASHSTAR_STYLE'
    groovy = 'SLASHSTAR_STYLE'
    scala = 'SLASHSTAR_STYLE'
  }
}

test {
  afterSuite { descriptor, result ->
    def indicator = "\u001B[32m✓\u001b[0m"
    if (result.failedTestCount > 0) {
      indicator = "\u001B[31m✘\u001b[0m"
    }
    logger.lifecycle("$indicator Test ${descriptor.name}; Executed: ${result.testCount}/\u001B[32m${result.successfulTestCount}\u001B[0m/\u001B[31m${result.failedTestCount}\u001B[0m")
  }
}

// This disables the pedantic doclint feature of JDK8
if (JavaVersion.current().isJava8Compatible()) {
  tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
  }
}
